# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Comment {
  """The unique identifier of the comment"""
  id: Int!

  """The content of the comment"""
  content: String!

  """The user who created the comment"""
  author: User!

  """The ID of the user who created the comment"""
  authorId: Int!

  """The picture the comment belongs to"""
  picture: Picture

  """The ID of the picture the comment belongs to"""
  pictureId: Int!

  """The creation date of the comment"""
  createdAt: DateTime!

  """The update date of the comment"""
  updatedAt: DateTime!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Picture {
  id: Int!
  fileUrl: String!
  fileName: String!
  description: String
  author: User!
  authorId: Int!
  comments: [Comment!]
  createdAt: DateTime!
  updatedAt: DateTime!
}

type User {
  id: Int!
  email: String!
  password: String!
  firstName: String!
  lastName: String!
  pictures: [Picture!]
  comments: [Comment!]
  createdAt: DateTime!
  updatedAt: DateTime!
}

type LoginResponse {
  accessToken: String!
  refreshToken: String!
}

type Query {
  users: [User!]!
  pictures: [Picture!]!
  picture(id: Float!): Picture!
  picturesByAuthor(authorId: Float!): [Picture!]!
  commentsByPictureId(pictureId: Int!): [Comment!]!
  comments: [Comment!]!
  comment(id: Int!): Comment!
}

type Mutation {
  createUser(createUserInput: CreateUserDto!): User!
  login(email: String!, password: String!): LoginResponse!
  createPicture(input: CreatePictureInput!): Picture!
  updatePicture(id: Float!, input: UpdatePictureInput!): Picture!
  deletePicture(id: Float!): Picture!
  createComment(createCommentInput: CreateCommentInput!): Comment!
  updateComment(updateCommentInput: UpdateCommentInput!): Comment!
  removeComment(id: Int!): Comment!
}

input CreateUserDto {
  email: String!
  password: String!
  firstName: String!
  lastName: String!
}

input CreatePictureInput {
  description: String
  authorId: Float!
  fileUrl: String!
  fileName: String!
}

input UpdatePictureInput {
  description: String
  authorId: Float
  fileUrl: String
  fileName: String
}

input CreateCommentInput {
  """The content of the comment"""
  content: String!

  """The ID of the user who created the comment"""
  authorId: Int!

  """The ID of the picture the comment belongs to"""
  pictureId: Int!
}

input UpdateCommentInput {
  """The content of the comment"""
  content: String

  """The ID of the user who created the comment"""
  authorId: Int

  """The ID of the picture the comment belongs to"""
  pictureId: Int
  id: Int!
}